# les services de notre docker-compose 
services:
  # nom arbitraire pour notre api rest en flask
  pythonapp: 
    image: python:3.8.20
    # redémarre le conteneur au reboot de ma machine
    # sauf si je l'avais arrêté manuellement 
    restart: unless-stopped
    # dossier partagé entre le répertoire api de mon repo
    # sur ma machine, que je mappe dans le répertoire /rel
    # de mon conteneur
    # A gauche du `:`, cela fait référence au répertoire/fichier 
    # présent sur ma machine. 
    # A droite du `:`, cela fait référence au répertoire/fichier
    # dans le conteneur. 
    volumes: 
      - ./api/:/rel
    # laisse un terminal ouvert dans le conteneur
    # cela nous permet de ne pas démarrer notre 
    # api/application directement 
    tty: true
    # je mappe le port réseau 5000 de ma machine (a gauche), avec 
    # le port 5000 de mon conteneur (a droite) 
    ports: 
      - "5000:5000"

  # ajout d'un service de base de données PostgreSQL 
  mypgdb:
    image: postgres:15
    environment:
      # crée automatiquement un utilisateur pour nous 
      POSTGRES_USER: pguser
      # spécifie automatiquement un mot de passe por l'utilisateur spécifié ci-dessus 
      POSTGRES_PASSWORD: pgpassword # a changer lors d'utilisation cas reel
      # crée automatiquement une base de données pour nous
      POSTGRES_DB: taskmgr
    # je mappe le port réseau 5432 de ma machine (a gauche), avec 
    # le port 5432 de mon conteneur (a droite) 
    ports:
      - "5432:5432"
    volumes: 
      - ./postgres_data:/var/lib/postgresql/data
